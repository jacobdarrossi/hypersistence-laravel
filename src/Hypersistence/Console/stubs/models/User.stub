<?php

namespace {{namespace}}Models;

use Hypersistence\Hypersistence;
use Hypersistence\Auth\HypersistenceUser;

use Illuminate\Contracts\Auth\Authenticatable as AuthenticatableContract;
use Illuminate\Contracts\Auth\Access\Authorizable as AuthorizableContract;
use Illuminate\Contracts\Auth\CanResetPassword as CanResetPasswordContract;

/**
* @table(user)
*/
class User extends Hypersistence implements 
										AuthenticatableContract,
									    AuthorizableContract,
									    CanResetPasswordContract {

	use HypersistenceUser;

	/**
	* @primaryKey
	*/
	private $id;

	/**
	* @column(email)
	* @usernameField
	*/
	private $email;

	/**
	* @column(password)
	* @passwordField
	*/
	private $password;

	/**
	* @column(remember_token)
	* @rememberTokenField
	*/
	private $rememberToken;

    /**
     * @return mixed
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param mixed $id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * @return mixed
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * @param mixed $email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * @return mixed
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * @param mixed $password
     *
     * @return self
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * @return mixed
     */
    public function getRememberToken()
    {
        return $this->rememberToken;
    }

    /**
     * @param mixed $rememberToken
     *
     * @return self
     */
    public function setRememberToken($rememberToken)
    {
        $this->rememberToken = $rememberToken;

        return $this;
    }
}